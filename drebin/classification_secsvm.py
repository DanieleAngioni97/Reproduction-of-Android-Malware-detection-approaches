from secml.core import CCreator
from secml.ml import CClassifierSVM
from c_classifier_sec_svm import CClassifierSecSVM


if __name__ == '__main__':
    features_path = "dataset"

    tr = CCreator().load(features_path + '/train_drebin.gz')
    ts = CCreator().load(features_path + '/test_drebin.gz')

    clf = CClassifierSecSVM(lb=-0.2, ub=0.2, C=0.1)

    print("Started training ...")
    clf.fit(tr.X, tr.Y)
    print("Model trained!")

    w = clf.w.deepcopy()

    print("Max abs weight: ", w.abs().max())

    from secml.ml.peval.metrics import CMetricF1
    peval = CMetricF1()

    y_pred = clf.predict(ts.X)
    acc = peval.performance_score(ts.Y, y_pred)
    print("Accuracy: ", acc)



    print("")

